# 19.Описать базовый класс СТРОКА. 

# Описать производный класс ШЕСТНАДЦАТЕРИЧНАЯ_СТРОКА. (Строки данного класса могут содержать только
# символы от '0' до 'f'. Если в инициализирующей строке есть хоть 1 другой символ =>
# ШЕСТНАДЦАТИРИЧНАЯ СТРОКА = 0)

# Содержимое данных строк рассматривается как шестнадцатиричное число.
# Предусмотреть интерпритацию отрицательных чисел

# Обязательные методы:
# 1) изменение знака на противоположный (учитывать символ отриц числа)
# 2) Переопределить следующие операции: длина строки результата >= длине большей из
# строк (в случае необходимости более короткая битовая строка расширяется влево знаковым
# разрядом);

from hexadecimalStr import HexadecimalStr

HS1 = HexadecimalStr('F4240')
HS2 = HexadecimalStr('989680')

print('СЛОЖЕНИЕ:')
HS1 + HS2
print('\n\n')

print('ВЫЧИТАНИЕ:')
HS1 - HS2
print('\n\n')

print('УМНОЖЕНИЕ:')
HS1 * HS2
print('\n\n')

print('ДЕЛЕНИЕ //:')
HS1 / HS2
print('\n\n')

print('СУММИРОВАНИЕ +=')
HS1.__iadd__(HS2)
print('\n\n')

print('ОПЕРАЦИЯ -= ')
HS1.__isub__(HS2)
print('\n\n')

print('Операция *=')
HS1.__imul__(HS2)
print('\n\n')

print('Операция //=')
HS1.__itruediv__(HS2)
print('\n\n')